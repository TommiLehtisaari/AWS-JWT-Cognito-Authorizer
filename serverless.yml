# NOTE: update this with your service name
service: token-auth

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-west-1
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  environment:
    USER_POOL_ID: ${env:USER_POOL_ID}
    USER_POOL_CLIENT_ID: ${env:USER_POOL_CLIENT_ID}
    USER_POOL_REGION: ${env:USER_POOL_REGION}

functions:
  signin:
    handler: lambdas/signin.main
    events:
      - http:
          path: signin
          method: post
          cors: true

  changepassword:
    handler: lambdas/changePassword.main
    events:
      - http:
          path: changepassword
          method: post
          cors: true

  auth:
    handler: lambdas/auth.main

  publicendpoint:
    handler: lambdas/publichandler.main
    events:
      - http:
          path: publicendpoint
          method: get
          cors: true

  privateendpoint:
    handler: lambdas/privatehandler.main
    events:
      - http:
          path: privateendpoint
          method: get
          cors: true
          authorizer: auth

resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
